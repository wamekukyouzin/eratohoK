;継続状態や装着物に関する処理

;-------------------------------------------------
;キャラARG:0がコマンド番号ARG:1～ARG:10に対応する継続状態のプレイヤーまたはターゲットなら1を返す関数
;-------------------------------------------------
@IS_EQUIP(ARG:0, ARG:1, ARG:2 = -1, ARG:3 = -1, ARG:4 = -1, ARG:5 = -1, ARG:6 = -1, ARG:7 = -1, ARG:8 = -1, ARG:9 = -1, ARG:10 = -1, ARG:11 = -1, ARG:12 = -1, ARG:13 = -1)
#FUNCTION
FOR LOCAL:3, 1, 14
	IF ARG:(LOCAL:3) < 0
		RETURNF 0
	ENDIF
	FOR LOCAL:0, 0, MEQUIP_NUM
		IF MEQUIP:(LOCAL:0) == ARG:(LOCAL:3)
			FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
				IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:0
					RETURNF 1
				ENDIF
			NEXT
			FOR LOCAL:1, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
				IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) == ARG:0
					RETURNF 1
				ENDIF
			NEXT
		ENDIF
	NEXT
NEXT
RETURNF 0

;-------------------------------------------------
;キャラARG:0がコマンド番号ARG:1～ARG:8に対応する継続状態のプレイヤーならば1を返す関数
;-------------------------------------------------
@IS_EQUIP_PLAYER(ARG:0, ARG:1, ARG:2 = -1, ARG:3 = -1, ARG:4 = -1, ARG:5 = -1, ARG:6 = -1, ARG:7 = -1, ARG:8 = -1, ARG:9 = -1, ARG:10 = -1, ARG:11 = -1, ARG:12 = -1, ARG:13 = -1)
#FUNCTION
FOR LOCAL:3, 1, 14
	IF ARG:(LOCAL:3) < 0
		RETURNF 0
	ENDIF
	FOR LOCAL:0, 0, MEQUIP_NUM
		IF MEQUIP:(LOCAL:0) == ARG:(LOCAL:3)
			FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
				IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:0
					RETURNF 1
				ENDIF
			NEXT
		ENDIF
	NEXT
NEXT
RETURNF 0

;-------------------------------------------------
;キャラARG:0がコマンド番号ARG:1～ARG:8に対応する継続状態のターゲットならば1を返す関数
;-------------------------------------------------
@IS_EQUIP_TARGET(ARG:0, ARG:1, ARG:2 = -1, ARG:3 = -1, ARG:4 = -1, ARG:5 = -1, ARG:6 = -1, ARG:7 = -1, ARG:8 = -1, ARG:9 = -1, ARG:10 = -1, ARG:11 = -1, ARG:12 = -1, ARG:13 = -1)
#FUNCTION
FOR LOCAL:3, 1, 14
	IF ARG:(LOCAL:3) < 0
		RETURNF 0
	ENDIF
	FOR LOCAL:0, 0, MEQUIP_NUM
		IF MEQUIP:(LOCAL:0) == ARG:(LOCAL:3)
			FOR LOCAL:1, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
				IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) == ARG:0
					RETURNF 1
				ENDIF
			NEXT
		ENDIF
	NEXT
NEXT
RETURNF 0

;-------------------------------------------------
;ARG:0の値に応じて
;  -1→MPLYをプレイヤー、MTAR「以外」をターゲットとする
;  -2→MPLY「以外」をプレイヤー、MTARをターゲットとする
;  -3→MTARをプレイヤー、MPLY「以外」をターゲットとする
;  -4→MTAR「以外」をプレイヤー、MPLYをターゲットとする
;コマンド番号ARG:1～ARG:10に対応する継続状態があれば1を返す関数
;-------------------------------------------------
@IS_EQUIP_OTHERS(ARG:0, ARG:1, ARG:2 = -1, ARG:3 = -1, ARG:4 = -1, ARG:5 = -1, ARG:6 = -1, ARG:7 = -1, ARG:8 = -1, ARG:9 = -1, ARG:10 = -1, ARG:11 = -1, ARG:12 = -1, ARG:13 = -1)
#FUNCTION
FOR LOCAL:6, 1, 14
	IF ARG:(LOCAL:6) < 0
		RETURNF 0
	ENDIF
	IF ARG:0 == -1
		FOR LOCAL:0, 0, MEQUIP_NUM
			IF MEQUIP:(LOCAL:0) == ARG:(LOCAL:6)
				FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
					FOR LOCAL:2, 0, MPLY_NUM
						IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == MPLY:(LOCAL:2)
							FOR LOCAL:3, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
								FOR LOCAL:4, 0, MTAR_NUM
									IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:3) != MTAR:(LOCAL:4)
										RETURNF 1
									ENDIF
								NEXT
							NEXT
						ENDIF
					NEXT
				NEXT
			ENDIF
		NEXT
	ELSEIF ARG:0 == -2
		FOR LOCAL:0, 0, MEQUIP_NUM
			IF MEQUIP:(LOCAL:0) == ARG:(LOCAL:6)
				FOR LOCAL:1, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
					FOR LOCAL:2, 0, MTAR_NUM
						IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) == MTAR:(LOCAL:2)
							FOR LOCAL:3, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
								FOR LOCAL:4, 0, MPLY_NUM
									IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:3) != MPLY:(LOCAL:4)
										RETURNF 1
									ENDIF
								NEXT
							NEXT
						ENDIF
					NEXT
				NEXT
			ENDIF
		NEXT
	ELSEIF ARG:0 == -3
		FOR LOCAL:0, 0, MEQUIP_NUM
			IF MEQUIP:(LOCAL:0) == ARG:(LOCAL:6)
				FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
					FOR LOCAL:2, 0, MTAR_NUM
						IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == MTAR:(LOCAL:2)
							FOR LOCAL:3, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
								FOR LOCAL:4, 0, MPLY_NUM
									IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:3) != MPLY:(LOCAL:4)
										RETURNF 1
									ENDIF
								NEXT
							NEXT
						ENDIF
					NEXT
				NEXT
			ENDIF
		NEXT
	ELSEIF ARG:0 == -4
		FOR LOCAL:0, 0, MEQUIP_NUM
			IF MEQUIP:(LOCAL:0) == ARG:(LOCAL:6)
				FOR LOCAL:1, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
					FOR LOCAL:2, 0, MPLY_NUM
						IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) == MPLY:(LOCAL:2)
							FOR LOCAL:3, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
								FOR LOCAL:4, 0, MTAR_NUM
									IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:3) != MTAR:(LOCAL:4)
										RETURNF 1
									ENDIF
								NEXT
							NEXT
						ENDIF
					NEXT
				NEXT
			ENDIF
		NEXT
	ELSE
		RETURNF 0
	ENDIF
NEXT
RETURNF 0

;-------------------------------------------------
;MEQUIPのコマンド番号がARG:0、プレイヤーがARG:1、ターゲットがARG:2の継続状態を検索し、存在すればMEQUIP番号を返す
;存在しない場合は-1を返す
;プレイヤー・ターゲットに-1を指定すると、そのプレイヤー・ターゲット指定を無視して探索
;-------------------------------------------------
@SEARCH_EQUIP(ARG:0, ARG:1, ARG:2)
#FUNCTION
FOR LOCAL:0, 0, MEQUIP_NUM
	IF MEQUIP:(LOCAL:0) == ARG:0
		FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
			IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:1 || ARG:1 == -1
				FOR LOCAL:2, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
					IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:2) == ARG:2 || ARG:2 == -1
						RETURNF LOCAL:0
					ENDIF
				NEXT
				BREAK
			ENDIF
		NEXT
	ENDIF
NEXT
RETURNF -1

;-------------------------------------------------
;MEQUIPのコマンド番号がARG:0、プレイヤー・ターゲットがARG:1・ARG:2の継続状態を検索し、存在すればMEQUIP番号を返す
;存在しない場合は-1を返す
;SEARCH_EQUIPと違い、ARG:1とARG:2が可換(いずれか片方がプレイヤー、片方がターゲットなら条件を満たす)
;-------------------------------------------------
@SEARCH_EQUIP_IC(ARG:0, ARG:1, ARG:2)
#FUNCTION
FOR LOCAL:0, 0, MEQUIP_NUM
	IF MEQUIP:(LOCAL:0) == ARG:0
		FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
			IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:1 || ARG:1 == -1
				FOR LOCAL:2, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
					IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:2) == ARG:2 || ARG:2 == -1
						RETURNF LOCAL:0
					ENDIF
				NEXT
				BREAK
			ENDIF
			IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:2 || ARG:2 == -1
				FOR LOCAL:2, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
					IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:2) == ARG:1 || ARG:1 == -1
						RETURNF LOCAL:0
					ENDIF
				NEXT
				BREAK
			ENDIF
		NEXT
	ENDIF
NEXT
RETURNF -1

;-------------------------------------------------
;MEQUIPのコマンド番号がARG:0、プレイヤー・ターゲットがARG:1・ARG:2の継続状態を検索し、存在すればMEQUIP番号を返す
;存在しない場合は-1を返す
;SEARCH_EQUIP_ICと違い、ARG:1とARG:2はプレイヤーでもターゲットでも良い(両方がプレイヤー／両方がターゲットでも条件を満たす)
;-------------------------------------------------
@SEARCH_EQUIP_EITHER(ARG:0, ARG:1, ARG:2)
#FUNCTION
FOR LOCAL:0, 0, MEQUIP_NUM
	IF MEQUIP:(LOCAL:0) == ARG:0
		FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
			IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:1 || ARG:1 == -1
				FOR LOCAL:2, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
					IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:2) == ARG:2 || ARG:2 == -1
						RETURNF LOCAL:0
					ENDIF
				NEXT
				FOR LOCAL:2, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
					IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:2) == ARG:2
						RETURNF LOCAL:0
					ENDIF
				NEXT
				BREAK
			ENDIF
		NEXT
		FOR LOCAL:1, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
			IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) == ARG:1
				FOR LOCAL:2, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
					IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:2) == ARG:2 || ARG:2 == -1
						RETURNF LOCAL:0
					ENDIF
				NEXT
				FOR LOCAL:2, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
					IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:2) == ARG:2
						RETURNF LOCAL:0
					ENDIF
				NEXT
				BREAK
			ENDIF
		NEXT
	ENDIF
NEXT
RETURNF -1

;-------------------------------------------------
;キャラARG:0がARG:1番のMEQUIPのプレイヤーであるかどうかを返す関数
;-------------------------------------------------
@IS_MPLY_EQUIP(ARG:0, ARG:1)
#FUNCTION
IF ARG:1 >= 0 && ARG:1 < MAX_MEQUIP && MEQUIP:(ARG:1) >= 0
	FOR LOCAL:0, 0, MAX_MEQUIP_PLAYER
		IF MEQUIP_PLAYER:(ARG:1):(LOCAL:0) == ARG:0
			RETURNF 1
		ENDIF
	NEXT
ENDIF
RETURNF 0

;-------------------------------------------------
;キャラARG:0がARG:1番のMEQUIPのターゲットであるかどうかを返す関数
;-------------------------------------------------
@IS_MTAR_EQUIP(ARG:0, ARG:1)
#FUNCTION
IF ARG:1 >= 0 && ARG:1 < MAX_MEQUIP && MEQUIP:(ARG:1) >= 0
	FOR LOCAL:0, 0, MAX_MEQUIP_TARGET
		IF MEQUIP_TARGET:(ARG:1):(LOCAL:0) == ARG:0
			RETURNF 1
		ENDIF
	NEXT
ENDIF
RETURNF 0

;-------------------------------------------------
;ARG:0番のコマンドの継続状態を設定する関数
;ARG:1に1を指定すると強制的に継続させる
;-------------------------------------------------
@SET_EQUIP(ARG:0, ARG:1 = 0)
;既にEQUIPの数が限界に達しているなら戻る
IF MEQUIP_NUM >= 50
	RETURN
ENDIF

;継続コマンドでなければ戻る
RESULT = 0
TRYCALLFORM COM_IS_EQUIP{ARG:0}
IF !RESULT && !ARG:1
	RETURN
ENDIF

;既に同じ継続状態が設定されていれば戻る
FOR LOCAL:0, 0, MEQUIP_NUM
	IF MEQUIP:(LOCAL:0) == ARG:0
		LOCAL:5 = 1
		FOR LOCAL:1, 0, MPLY_NUM
			;※MPLYもMEQUIP_PLAYERもキャラ番号の若い順に並んでいるはずなので、単純比較する
			IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) != MPLY:(LOCAL:1)
				LOCAL:5 = 0
				BREAK
			ENDIF
		NEXT
		IF LOCAL:5
			FOR LOCAL:1, 0, MTAR_NUM
				;※MTARもMEQUIP_TARGETもキャラ番号の若い順に並んでいるはずなので、単純比較する
				IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) != MTAR:(LOCAL:1)
					LOCAL:5 = 0
					BREAK
				ENDIF
			NEXT
			IF LOCAL:5
				RETURN
			ENDIF
		ENDIF
	ENDIF
NEXT

;MEQUIP配列の最後尾に指定された継続状態を設定
LOCAL:0 = MEQUIP_NUM

MEQUIP:(LOCAL:0) = ARG:0
FOR LOCAL:1, 0, MPLY_NUM
	MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) = MPLY:(LOCAL:1)
NEXT
FOR LOCAL:1, 0, MTAR_NUM
	MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) = MTAR:(LOCAL:1)
NEXT
MEQUIP_PLAYER_NUM:(LOCAL:0) = MPLY_NUM
MEQUIP_TARGET_NUM:(LOCAL:0) = MTAR_NUM

MEQUIP_NUM ++

;-------------------------------------------------
;EQUIP解除の処理  ARG:0=MEQUIPの配列番号 ARG:1=逆調教中の解除を許すかどうか ARG:2=メッセージを表示するかどうか
;解除が行われた場合1を返す
;-------------------------------------------------
@RELEASE_EQUIP(ARG:0, ARG:1 = 0, ARG:2 = 1)
;逆調教中でARG:1が0なら解除不能
IF GROUPMATCH(FLAG:調教モード, 4, 5, 7) && !ARG:1
	RETURN 0
ENDIF

IF ARG:0 >= 0 && ARG:0 < MEQUIP_NUM
	LOCAL:5 = MEQUIP:(ARG:0)
	LOCAL:6 = MEQUIP_PLAYER:(ARG:0):0

	IF ARG:2
		;コマンドごとの地の文表示
		TRYCALLFORM COM_TEXT_RELEASE_EQUIP{MEQUIP:(ARG:0)}(ARG:0)
	ENDIF

	;削除するMEQUIPの分、配列番号を詰める
	FOR LOCAL:0, ARG:0, MEQUIP_NUM - 1
		MEQUIP:(LOCAL:0) = MEQUIP:(LOCAL:0 + 1)
		MEQUIP_PLAYER_NUM:(LOCAL:0) = MEQUIP_PLAYER_NUM:(LOCAL:0 + 1)
		MEQUIP_TARGET_NUM:(LOCAL:0) = MEQUIP_TARGET_NUM:(LOCAL:0 + 1)
		FOR LOCAL:1, 0, MAX_MEQUIP_PLAYER
			MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) = MEQUIP_PLAYER:(LOCAL:0 + 1):(LOCAL:1)
		NEXT
		FOR LOCAL:1, 0, MAX_MEQUIP_TARGET
			MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) = MEQUIP_TARGET:(LOCAL:0 + 1):(LOCAL:1)
		NEXT
		MEQUIP_TURN:(LOCAL:0) = MEQUIP_TURN:(LOCAL:0 + 1)
	NEXT

	;最後尾のデータをクリア
	LOCAL:2 = MEQUIP_NUM - 1
	MEQUIP:(LOCAL:2) = -1
	MEQUIP_PLAYER_NUM:(LOCAL:2) = 0
	MEQUIP_TARGET_NUM:(LOCAL:2) = 0
	FOR LOCAL:1, 0, MAX_MEQUIP_PLAYER
		MEQUIP_PLAYER:(LOCAL:2):(LOCAL:1) = -1
	NEXT
	FOR LOCAL:1, 0, MAX_MEQUIP_TARGET
		MEQUIP_TARGET:(LOCAL:2):(LOCAL:1) = -1
	NEXT
	MEQUIP_TURN:(LOCAL:2) = 0

	MEQUIP_NUM --

	;コマンドが触手召喚だった場合
	IF LOCAL:5 == 200
		;触手召喚を解除したキャラがプレイヤーとなっている全ての触手系EQUIPを解除
		FOR LOCAL:0, 201, 212
			CALL RELEASE_EQUIP_EX(LOCAL:0, LOCAL:6, -1)
		NEXT
	ENDIF

	RETURN 1
ENDIF

RETURN 0

;-------------------------------------------------
;EQUIP解除の処理  ARG:0=MEQUIPに対応するコマンド番号 ARG:1=プレイヤーのキャラ番号 ARG:2=ターゲットのキャラ番号
;プレイヤー・ターゲットに-1を指定すると、そのプレイヤー・ターゲット指定を無視して探索
;-------------------------------------------------
@RELEASE_EQUIP_EX(ARG:0, ARG:1, ARG:2)
FOR LOCAL:0, 0, MAX_MEQUIP
	CALL RELEASE_EQUIP(SEARCH_EQUIP(ARG:0, ARG:1, ARG:2), 1, 0)
	IF !RESULT
		BREAK
	ENDIF
NEXT

;-------------------------------------------------
;キャラARG:0が関わるEQUIPを全て解除する関数
;-------------------------------------------------
@RELEASE_ALL_EQUIP(ARG:0)
LOCAL:0 = 0
LOCAL:2 = MEQUIP_NUM
WHILE LOCAL:0 < LOCAL:2
	LOCAL:5 = 0
	FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
		IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:0
			LOCAL:5 = 1
			BREAK
		ENDIF
	NEXT
	IF !LOCAL:5
		FOR LOCAL:1, 0, MEQUIP_TARGET_NUM:(LOCAL:0)
			IF MEQUIP_TARGET:(LOCAL:0):(LOCAL:1) == ARG:0
				LOCAL:5 = 1
				BREAK
			ENDIF
		NEXT
	ENDIF
	IF LOCAL:5
		CALL RELEASE_EQUIP(LOCAL:0, 1, 0)
		LOCAL:2 --
	ELSE
		LOCAL:0 ++
	ENDIF
WEND

;-------------------------------------------------
;キャラARG:0が気絶した時のEQUIP解除
;-------------------------------------------------
@DOWN_RELEASE_EQUIP(ARG:0)
LOCAL:0 = 0
LOCAL:2 = MEQUIP_NUM
WHILE LOCAL:0 < LOCAL:2
	LOCAL:5 = 0
	FOR LOCAL:1, 0, MEQUIP_PLAYER_NUM:(LOCAL:0)
		IF MEQUIP_PLAYER:(LOCAL:0):(LOCAL:1) == ARG:0
			;解除しないコマンド 騎乗位、Ａ騎乗位、バイブ、Ａバイブ、クリキャップ、ニプルキャップ、縄、目隠し、ゴム
			IF !GROUPMATCH(MEQUIP:(LOCAL:0), 34, 44, 61, 62, 63, 64, 67, 75, 85, 84)
				LOCAL:5 = 1
				BREAK
			ENDIF
		ENDIF
	NEXT
	IF LOCAL:5
		CALL RELEASE_EQUIP(LOCAL:0, 1, 0)
		LOCAL:2 --
	ELSE
		LOCAL:0 ++
	ENDIF
WEND

;-------------------------------------------------
;EQUIPを初期化する関数
;-------------------------------------------------
@INIT_EQUIP
VARSET MEQUIP, -1
MEQUIP_NUM = 0
VARSET MEQUIP_PLAYER, -1
VARSET MEQUIP_TARGET, -1
VARSET MEQUIP_PLAYER_NUM, 0
VARSET MEQUIP_TARGET_NUM, 0
VARSET MEQUIP_TURN, 0

;--------------------------------------------------------
;継続コマンドのプレイヤー名称を取得 ARG:0=MEQUIPの配列番号
;--------------------------------------------------------
@EQUIP_PLAYER_ANAME(ARG:0)
#FUNCTIONS
IF MEQUIP_PLAYER_NUM:(ARG:0) >= 3
	LOCALS:0 = %ANAME(MEQUIP_PLAYER:(ARG:0):0)%たち
ELSE
	LOCALS:0 = 
	FOR LOCAL:0, 0, MEQUIP_PLAYER_NUM:(ARG:0)
		IF LOCAL:0 >= 1
			LOCALS:0 = %LOCALS:0%と
		ENDIF
		LOCALS:0 = %LOCALS:0%%ANAME(MEQUIP_PLAYER:(ARG:0):(LOCAL:0))%
	NEXT
ENDIF
RETURNF LOCALS:0

;--------------------------------------------------------
;継続コマンドのターゲット名称を取得 ARG:0=MEQUIPの配列番号
;--------------------------------------------------------
@EQUIP_TARGET_ANAME(ARG:0)
#FUNCTIONS
IF MEQUIP_TARGET_NUM:(ARG:0) >= 3
	LOCALS:1 = %ANAME(MEQUIP_TARGET:(ARG:0):0)%たち
ELSE
	LOCALS:1 = 
	FOR LOCAL:0, 0, MEQUIP_TARGET_NUM:(ARG:0)
		IF LOCAL:0 >= 1
			LOCALS:1 = %LOCALS:1%と
		ENDIF
		LOCALS:1 = %LOCALS:1%%ANAME(MEQUIP_TARGET:(ARG:0):(LOCAL:0))%
	NEXT
ENDIF
RETURNF LOCALS:1

;-------------------------------------------------
;キャラARG:0のソースを一時的に退避する関数
;-------------------------------------------------
@PUTOUT_SOURCE(ARG:0)
FOR LOCAL:0, 0, 100
	MEMORY_SOURCE:(ARG:0):(LOCAL:0) = SOURCE:(ARG:0):(LOCAL:0)
	SOURCE:(ARG:0):(LOCAL:0) = 0
NEXT

;-------------------------------------------------
;キャラARG:0の退避したソースを再び加算する関数
;-------------------------------------------------
@SUM_SOURCE(ARG:0)
FOR LOCAL:0, 0, 100
	SOURCE:(ARG:0):(LOCAL:0) += MEMORY_SOURCE:(ARG:0):(LOCAL:0)
	MEMORY_SOURCE:(ARG:0):(LOCAL:0) = 0
NEXT

;-------------------------------------------------
;キャラARG:0のＶが埋まっているかどうかを判定する関数
;-------------------------------------------------
@IS_V_HOLD(ARG:0)
#FUNCTION
;貝合わせ、双頭バイブ
IF IS_EQUIP_PLAYER(ARG:0, 21) || IS_EQUIP_TARGET(ARG:0, 21) || IS_EQUIP_PLAYER(ARG:0, 22) || IS_EQUIP_TARGET(ARG:0, 22)
ENDIF
;性交
IF IS_EQUIP_TARGET(ARG:0, 30) || IS_EQUIP_TARGET(ARG:0, 31) || IS_EQUIP_TARGET(ARG:0, 32) || IS_EQUIP_TARGET(ARG:0, 33) || IS_EQUIP_TARGET(ARG:0, 34) || IS_EQUIP_TARGET(ARG:0, 35) || IS_EQUIP_TARGET(ARG:0, 36) || IS_EQUIP_TARGET(ARG:0, 37) || IS_EQUIP_TARGET(ARG:0, 38) || IS_EQUIP_TARGET(ARG:0, 39) || IS_EQUIP_TARGET(ARG:0, 52) || IS_EQUIP_TARGET(ARG:0, 55) || IS_EQUIP_TARGET(ARG:0, 57) || IS_EQUIP_TARGET(ARG:0, 160)
	RETURNF 1
ENDIF
;指挿入、尻尾挿入
IF IS_EQUIP_TARGET(ARG:0, 3) || IS_EQUIP_TARGET(ARG:0, 6)
	RETURNF 1
ENDIF
;バイブ、拡張バルーン、フィスト
IF IS_EQUIP_TARGET(ARG:0, 61) || IS_EQUIP_TARGET(ARG:0, 65) || IS_EQUIP_TARGET(ARG:0, 87)
	RETURNF 1
ENDIF
;顔面騎乗
IF IS_EQUIP_PLAYER(ARG:0, 101)
	RETURNF 1
ENDIF
;触手挿入
IF IS_EQUIP_TARGET(ARG:0, 201)
	RETURNF 1
ENDIF
;尻尾セルフV
IF IS_EQUIP_PLAYER(ARG:0, 108)
	RETURNF 1
ENDIF
RETURNF 0

;-------------------------------------------------
;キャラARG:0のＡが埋まっているかどうかを判定する関数
;-------------------------------------------------
@IS_A_HOLD(ARG:0)
#FUNCTION
;Ａ性交
IF IS_EQUIP_TARGET(ARG:0, 40) || IS_EQUIP_TARGET(ARG:0, 41) || IS_EQUIP_TARGET(ARG:0, 42) || IS_EQUIP_TARGET(ARG:0, 43) || IS_EQUIP_TARGET(ARG:0, 44) || IS_EQUIP_TARGET(ARG:0, 45)  || IS_EQUIP_TARGET(ARG:0, 46) || IS_EQUIP_TARGET(ARG:0, 47) || IS_EQUIP_TARGET(ARG:0, 48) || IS_EQUIP_TARGET(ARG:0, 49) || IS_EQUIP_TARGET(ARG:0, 53) || IS_EQUIP_TARGET(ARG:0, 56) || IS_EQUIP_TARGET(ARG:0, 58) || IS_EQUIP_TARGET(ARG:0, 161)
	RETURNF 1
ENDIF
;アナル愛撫、尻尾Ａ挿入、アナル舐め
IF IS_EQUIP_TARGET(ARG:0, 4) || IS_EQUIP_TARGET(ARG:0, 7) || IS_EQUIP_TARGET(ARG:0, 8)
	RETURNF 1
ENDIF
;尻尾、Ａバイブ、拡張バルーン、Ａフィスト、浣腸＆プラグ
IF IS_EQUIP_TARGET(ARG:0, 62) || IS_EQUIP_TARGET(ARG:0, 66) || IS_EQUIP_TARGET(ARG:0, 88) || IS_EQUIP_TARGET(ARG:0, 142)
	RETURNF 1
ENDIF
;Ａ顔面騎乗、Ｗ顔面騎乗
IF IS_EQUIP_PLAYER(ARG:0, 102) || IS_EQUIP_PLAYER(ARG:0, 105)
	RETURNF 1
ENDIF
;触手Ａ挿入
IF IS_EQUIP_TARGET(ARG:0, 202)
	RETURNF 1
ENDIF
;尻尾セルフA
IF IS_EQUIP_PLAYER(ARG:0, 109)
	RETURNF 1
ENDIF
RETURNF 0

;-------------------------------------------------
;キャラARG:0の口が埋まっているかどうかを判定する関数
;-------------------------------------------------
@IS_M_HOLD(ARG:0)
#FUNCTION
;キス
IF IS_EQUIP(ARG:0, 20, 342)
	RETURNF 1
ENDIF
;フェラ、クンニ、亀頭フェラ、アナル舐め
IF IS_EQUIP_PLAYER(ARG:0, 2) || IS_EQUIP_PLAYER(ARG:0, 11) || IS_EQUIP_PLAYER(ARG:0, 107) || IS_EQUIP_PLAYER(ARG:0, 8)
	RETURNF 1
ENDIF
;乳首吸い
IF IS_EQUIP_PLAYER(ARG:0, 9)
	RETURNF 1
ENDIF
;口枷、イラマ、触手口辱
IF IS_EQUIP_TARGET(ARG:0, 86) || IS_EQUIP_TARGET(ARG:0, 90) || IS_EQUIP_TARGET(ARG:0, 91) || IS_EQUIP_TARGET(ARG:0, 94) || IS_EQUIP_TARGET(ARG:0, 210)
	RETURNF 1
ENDIF
;顔面騎乗、Ａ顔面騎乗、Ｗ顔面騎乗
IF IS_EQUIP_TARGET(ARG:0, 101) || IS_EQUIP_TARGET(ARG:0, 102) || IS_EQUIP_TARGET(ARG:0, 105)
	RETURNF 1
ENDIF
;脚舐め
IF IS_EQUIP_PLAYER(ARG:0, 104) 
	RETURNF 1
ENDIF
RETURNF 0

;-------------------------------------------------
;キャラARG:0が拘束状態にあるかどうかを判定する関数
;-------------------------------------------------
@IS_BIND(ARG:0)
#FUNCTION
;縄・触手緊縛
IF IS_EQUIP_TARGET(ARG:0, 85, 208)
	RETURNF 1
ENDIF
RETURNF 0

;-------------------------------------------------
;キャラARG:0が顔面騎乗中かどうかを判定する関数 ARG:1にターゲットを指定可能
;-------------------------------------------------
@IS_RIDE(ARG:0, ARG:1 = -1)
#FUNCTION
IF ARG:1 < 0
	IF IS_EQUIP_PLAYER(ARG:0, 101) || IS_EQUIP_PLAYER(ARG:0, 102) || IS_EQUIP_PLAYER(ARG:0, 105)
		RETURNF 1
	ENDIF
ELSE
	IF SEARCH_EQUIP(101, ARG:0, ARG:1) >= 0 || SEARCH_EQUIP(102, ARG:0, ARG:1) >= 0 || SEARCH_EQUIP(105, ARG:0, ARG:1) >= 0
		RETURNF 1
	ENDIF
ENDIF
RETURNF 0

;-------------------------------------------------
;キャラARG:0が顔面騎乗されているかどうかを判定する関数 ARG:1にプレイヤーを指定可能
;-------------------------------------------------
@IS_RIDDEN(ARG:0, ARG:1 = -1)
#FUNCTION
IF ARG:1 < 0
	IF IS_EQUIP_TARGET(ARG:0, 101) || IS_EQUIP_TARGET(ARG:0, 102) || IS_EQUIP_TARGET(ARG:0, 105)
		RETURNF 1
	ENDIF
ELSE
	IF SEARCH_EQUIP(101, ARG:1, ARG:0) >= 0 || SEARCH_EQUIP(102, ARG:1, ARG:0) >= 0 || SEARCH_EQUIP(105, ARG:1, ARG:0) >= 0
		RETURNF 1
	ENDIF
ENDIF
RETURNF 0

;--------------------------------------------------------
;対Ｐ奉仕系コマンドの継続フラグを解除する関数
;--------------------------------------------------------
@RELEASE_SERVE_P
FOR LOCAL:0, 0, MPLY_NUM
	FOR LOCAL:1, 0, MTAR_NUM
		CALL RELEASE_EQUIP_EX(10, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(11, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(12, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(13, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(14, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(15, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(16, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(17, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(18, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(91, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(94, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(103, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(106, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(107, MPLY:(LOCAL:0), MTAR:(LOCAL:1))
		CALL RELEASE_EQUIP_EX(90, MTAR:(LOCAL:0), MPLY:(LOCAL:1))
	NEXT
NEXT

;--------------------------------------------------------
;口上の互換性をとるための関数／口が塞がっているかどうかをチェックする
;--------------------------------------------------------
@IS_EQUIP_CONTINUE(ARG:0, ARGS:1)
#FUNCTION
IF ARGS:1 == "口装着"
	;口枷・イラマチオ
	IF IS_EQUIP_TARGET(ARG:0, 86) || IS_EQUIP_TARGET(ARG:0, 90)
	ENDIF
ENDIF

RETURNF 0
