@CHARACTER_EDIT_UI_TALENT(対象)
#DIM 対象
LOCAL:1 = 0
FOR LOCAL, 0, 300
	SIF CHARACTER_EDIT_IGNORE_TALENT(LOCAL)
		CONTINUE
	SIF TALENTNAME:LOCAL == ""
		CONTINUE
	CALL PRINT_TOGGLE_BUTTON(@"%"[" + TALENTNAME:(LOCAL) + "]" , 14, LEFT%", LOCAL, TALENT:対象:LOCAL == 1)
	PRINT  
	LOCAL:1 ++

	SIF LOCAL:1 != 0 && LOCAL:1 % 6 == 0
		PRINTL
NEXT
PRINTL

CALL SINGLE_DRAWLINE
PRINTBUTTON "[成長型]:", GETNUM(TALENT, "成長型")
PRINTFORML %TOSTR_GROWTYPE(TALENT:対象:GETNUM(TALENT, "成長型"))%
CALL PRINT_TOGGLE_BUTTON("[チョロイン]", GETNUM(TALENT, "チョロイン"), TALENT:対象:チョロイン)
PRINTL
PRINTBUTTON "[危険日]:", GETNUM(TALENT, "危険日")
PRINTFORML %TOFULL(TOSTR(TALENT:対象:危険日))%, %TOFULL(TOSTR(TALENT:対象:危険日 + 5))%
CALL PRINT_TOGGLE_BUTTON("[キス]", GETNUM(TALENT, "キス未経験"), TALENT:対象:キス未経験)
CALL PRINT_TOGGLE_BUTTON("[処女]", GETNUM(TALENT, "処女"), TALENT:対象:処女)
CALL PRINT_TOGGLE_BUTTON("[アナル処女]", GETNUM(TALENT, "アナル処女"), TALENT:対象:アナル処女)
CALL PRINT_TOGGLE_BUTTON("[童貞]", GETNUM(TALENT, "童貞"), TALENT:対象:童貞)
PRINTL
PRINTBUTTON "[髪色]", GETNUM(TALENT, "髪色")
PRINT 現在:
CALL PRINT_HAIR_COLOR(TALENT:対象:髪色)
PRINTL 
PRINTBUTTON "[髪の長さ]", GETNUM(TALENT, "髪の長さ")
PRINTFORM 現在:%TOSTR_HAIR_LENGTH(TALENT:対象:髪の長さ)%


@CHARACTER_EDIT_INPUT_TALENT(対象, 入力値)
#DIM 対象
#DIM 入力値
;ガード節
SIF (CHARACTER_EDIT_IGNORE_TALENT(入力値) && !GROUPMATCH(入力値, GETNUM(TALENT, "処女"), GETNUM(TALENT, "アナル処女"), GETNUM(TALENT, "キス未経験"), GETNUM(TALENT, "童貞"))) || TALENTNAME:入力値 == ""
	RETURN 0

IF 入力値 == GETNUM(TALENT, "成長型")
	TALENT:対象:入力値 = ROUND_INCREMENT(TALENT:対象:入力値, 0, 9)
ELSEIF 入力値 == GETNUM(TALENT, "髪色")
	CALL EDIT_HAIR_COLOR(対象)
ELSEIF 入力値 == GETNUM(TALENT, "髪の長さ")
	PRINTL 髪の長さを数値で入力して下さい
	PRINTL ------長さの表記------
	PRINTL   2～ 24 スキンヘッド
	PRINTL  25～174 超ショート
	PRINTL 175～274 ショート
	PRINTL 275～474 ミドル
	PRINTL 475～674 ロング
	PRINTL 675～999 超ロング
	INPUT
	TALENT:対象:髪の長さ = LIMIT(RESULT, 2, 999)
ELSEIF 入力値 == GETNUM(TALENT, "危険日")
	PRINTL 0～4で入力
	INPUT
	TALENT:対象:危険日 = LIMIT(RESULT, 0, 4)
ELSEIF 入力値 == GETNUM(TALENT, "チョロイン")
    TALENT:対象:入力値 = !TALENT:対象:入力値
ELSEIF GROUPMATCH(入力値, GETNUM(TALENT, "処女"), GETNUM(TALENT, "アナル処女"), GETNUM(TALENT, "キス未経験"), GETNUM(TALENT, "童貞"))
	TALENT:対象:入力値 = !TALENT:対象:入力値
	SELECTCASE 入力値
		CASE GETNUM(TALENT, "処女")
			IF TALENT:対象:処女
				CALL VIRGINIZE(対象, 初体験_処女)
			ELSE
				CALL VIRGINIZE_LOST(対象, 初体験_処女)
			ENDIF
		CASE GETNUM(TALENT, "アナル処女")
			IF TALENT:対象:アナル処女
				CALL VIRGINIZE(対象, 初体験_アナル処女)
			ELSE
				CALL VIRGINIZE_LOST(対象, 初体験_アナル処女)
			ENDIF
		CASE GETNUM(TALENT, "キス未経験")
			IF TALENT:対象:キス未経験
				CALL VIRGINIZE(対象, 初体験_キス)
			ELSE
				CALL VIRGINIZE_LOST(対象, 初体験_キス)
			ENDIF
		CASE GETNUM(TALENT, "童貞")
			IF TALENT:対象:童貞
				CALL VIRGINIZE(対象, 初体験_童貞)
			ELSE
				CALL VIRGINIZE_LOST(対象, 初体験_童貞)
			ENDIF
	ENDSELECT
ELSEIF INRANGE(入力値, 0, 299) && 入力値 != GETNUM(TALENT, "性別")
	TALENT:対象:入力値 = !TALENT:対象:入力値
ENDIF

SIF !TALENT:対象:妖術知識
	ABL:対象:妖術 = 0

SIF !TALENT:対象:母乳体質
	CFLAG:対象:一時的母乳体質 = 0

@CHARACTER_EDIT_IGNORE_TALENT(ARG:0)
#FUNCTION
{
RETURNF GROUPMATCH(ARG:0, GETNUM(TALENT, "性別"), GETNUM(TALENT, "処女"), GETNUM(TALENT, "アナル処女"), GETNUM(TALENT, "キス未経験"), GETNUM(TALENT, "童貞"), GETNUM(TALENT, "恋慕"), GETNUM(TALENT, "親愛"), GETNUM(TALENT, "恋人"), GETNUM(TALENT, "服従"), GETNUM(TALENT, "隷属"), GETNUM(TALENT, "烙印"), GETNUM(TALENT, "親友"),
GETNUM(TALENT, "崩壊"), GETNUM(TALENT, "虚ろ"), GETNUM(TALENT, "正妻"), GETNUM(TALENT, "妾"), GETNUM(TALENT, "妊娠"), GETNUM(TALENT, "育児中"), GETNUM(TALENT, "幼児"),
GETNUM(TALENT, "触手妊娠"), GETNUM(TALENT, "Ａ触手妊娠"), GETNUM(TALENT, "子供人質"), GETNUM(TALENT, "孕み可能"), GETNUM(TALENT, "母性"), GETNUM(TALENT, "危険日"), GETNUM(TALENT, "合意"))
}