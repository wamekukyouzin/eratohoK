;-------------------------------------------------
;「説得させる」の名称
;-------------------------------------------------
@SHOP_LIFE_NAME32
RESULTS:0 '= "説得させる"

;-------------------------------------------------
;「説得させる」の選択可否判定
;-------------------------------------------------
@SHOP_LIFE_CHECK32
SIF CFLAG:MASTER:捕虜先
	RETURN 0
SIF !CFLAG:MASTER:所属
	RETURN 0
RETURN 1

;-------------------------------------------------
;「説得させる」の選択可能キャラ存在判定（説得される側）
;-------------------------------------------------
@SHOP_LIFE_CHECKCHARA32(ARG:0)
;非主人公、主人公勢力に所属していない、主人公勢力の捕虜
RETURN CHECK91(ARG:0, 2, ARG:0 != MASTER && CFLAG:(ARG:0):所属 != CFLAG:MASTER:所属 && CFLAG:(ARG:0):捕虜先 == CFLAG:MASTER:所属)

;-------------------------------------------------
;「説得させる」の選択可能キャラ存在判定（説得する側）
;-------------------------------------------------
@SHOP_LIFE_CHECKCHARA_SUB32(ARG:0)
;捕虜でない、通常状態または育児中、同一勢力
RETURN CHECK91(ARG:0, 2, CFLAG:(ARG:0):捕虜先 == 0 && GROUPMATCH(CFLAG:(ARG:0):行動不能状態, 0, 2) && CFLAG:(ARG:0):所属 == CFLAG:MASTER:所属 && !IS_ANIMAL(ARG:0))

;-------------------------------------------------
;関数名変更にともなうSHOPフォルダ外ファイルからの呼び出し対応
;※SYSTEM\EVENT_SETTOKU.ERB	@EVENT_SETTOKU	CALL CHECK_SELECTABLE1012(LOCAL:0)されている
;※SYSTEM\TURNEND.ERB からCALL CHECK_SELECTABLE_SETTOKU(LOCAL:10)されている
;-------------------------------------------------
@CHECK_SELECTABLE1012(ARG:0)
CALL SHOP_LIFE_CHECKCHARA32(ARG:0)

@CHECK_SELECTABLE_SETTOKU(ARG:0)
CALL SHOP_LIFE_CHECKCHARA_SUB32(ARG:0)

;-------------------------------------------------
;「説得させるの左カラムメニューの入力処理
;-------------------------------------------------
@SHOP_LIFE_EVENTBUY32
FLAG:拠点フェイズページ = 1
FLAG:夜這い = 0
RETURN 0


;-------------------------------------------------
;「説得させる」の右カラムキャラリスト１のボタン（関数未指定なら選択中色なし表示）
;-------------------------------------------------
@SHOP_LIFE_LIST1_BUTTON32(ARG:0, ARG:1)
;キャラ, 選択中カラー表示フラグ, ボタン番号に追加する数値, CHECKCHARAの戻り値
CALL COLUMN_RIGHT_CHARALIST_BUTTON(ARG:0, MENUVAR:0 == ARG:0, SHOP_LIFE_LIST1_ADD_INPUT, ARG:1, 0, "TOP")
RETURN

;-------------------------------------------------
;「説得させる」の右カラムキャラリスト２のボタン（関数未指定なら選択中色なし表示）
;-------------------------------------------------
@SHOP_LIFE_LIST2_BUTTON32(ARG:0, ARG:1)
;キャラ, 選択中カラー表示フラグ, ボタン番号に追加する数値, CHECKCHARAの戻り値
CALL COLUMN_RIGHT_CHARALIST_BUTTON(ARG:0, CFLAG:(ARG:0):捕虜調教の助手, SHOP_LIFE_LIST2_ADD_INPUT, ARG:1, 0, "BOTTOM")
RETURN 0

;-------------------------------------------------
;「捕虜の調教」の右カラムキャラリストボタン（上）表示に追尾させる情報
;　デフォルトの情報を表示しない場合はRETURN 1
;-------------------------------------------------
@SHOP_LIFE_BUTTON_ADD_TOP32(ARG:0)
#DIM 説得者君主
#DIM 対象君主
#DIM 忠誠
#DIM 誘惑
説得者君主 = GET_COUNTRY_BOSS(CFLAG:MASTER:所属)
対象君主 = GET_COUNTRY_BOSS(CFLAG:(ARG:0):所属)
IF 対象君主 == -1
	忠誠 = 0
ELSE
	忠誠 = SETTOKU_REL_EFFECT(ARG:0, 対象君主)
ENDIF

IF 説得者君主 == -1
	誘惑 = 0
ELSE
	誘惑 = SETTOKU_REL_EFFECT(ARG:0, 説得者君主)
ENDIF

PRINTFORM 知:
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(ARG:0):知略)
PRINTFORM {ABL:(ARG:0):知略, 3, RIGHT} 
PRINTFORM 政:
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(ARG:0):政治)
PRINTFORM {ABL:(ARG:0):政治, 3, RIGHT} 
PRINTFORM 忠誠:
CALL PRINT_GRADATIONBAR(忠誠, 100, 10, 0xFF5E7E, , 1)
PRINTFORM  誘惑:
CALL PRINT_GRADATIONBAR(誘惑, 100, 10, 0x60A74E)
RETURN 1

;-------------------------------------------------
;「捕虜の調教」の右カラムキャラリストボタン（上）表示に追尾させる情報
;　デフォルトの情報を表示しない場合はRETURN 1
;-------------------------------------------------
@SHOP_LIFE_BUTTON_ADD_BOTTOM32(ARG:0)
#DIM 説得者君主
#DIM 忠誠
説得者君主 = GET_COUNTRY_BOSS(CFLAG:MASTER:所属)

IF 説得者君主 == -1
	忠誠 = 0
ELSE
	忠誠 = SETTOKU_REL_EFFECT(ARG:0, 説得者君主)
ENDIF

PRINTFORM 知:
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(ARG:0):知略)
PRINTFORM {ABL:(ARG:0):知略, 3, RIGHT} 
PRINTFORM 政:
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(ARG:0):政治)
PRINTFORM {ABL:(ARG:0):政治, 3, RIGHT} 
IF ARG != 説得者君主
	PRINTFORM 忠誠:
	CALL PRINT_GRADATIONBAR(忠誠, 100, 10, 0xFF5E7E, , 1)
ENDIF

RETURN 1


;-------------------------------------------------
;「説得させる」の右カラム表示処理
;-------------------------------------------------
@SHOP_LIFE_EVENTBUY_SHOW32
;タイトル
CALL COLUMN_RIGHT_TITLE("対象と担当者を選択", "0", "1", "対象と担当者に1CT", "")
CALL COLUMN_RIGHT_PRINTL
CALL COLUMN_RIGHT_LINE
CALL COLUMN_RIGHT_PRINTL
IF MENUVAR:0 >= 0 && CFLAG:(MENUVAR:0):捕虜先 == CFLAG:MASTER:所属
	PRINTBUTTON "[このメンバーで決定]", 1
ELSE
	SETCOLOR カラー_選択不可
	PRINTPLAINFORM [このメンバーで決定]
	RESETCOLOR
ENDIF
PRINTPLAIN   
CALL COLORPRINT(@"忠誠は所属勢力の君主への忠誠、誘惑はこちらへの気持ちの傾きを表す", カラー_注釈)
CALL COLUMN_RIGHT_PRINTL
CALL COLUMN_RIGHT_LINE
CALL COLUMN_RIGHT_PRINTL

;右カラムの上下２のキャラリスト上とページ移動を呼ぶ
CALL COLUMN_RIGHT_CHARALIST_TOP(1)
CALL COLUMN_RIGHT_PRINTL
CALL COLUMN_RIGHT_LINE
CALL COLUMN_RIGHT_PRINTL

;現在参加している助手の数を数える
LOCAL:1 = 0
FOR LOCAL:0, 0, CHARANUM
	;選択可能な条件を満たしているかどうかを判定
	TRYCALLFORM SHOP_LIFE_CHECKCHARA_SUB{FLAG:拠点フェイズ選択コマンド}(LOCAL:0)
	IF RESULT == 1
		;選択中の人数を数える
		IF CFLAG:(LOCAL:0):捕虜調教の助手
			LOCAL:1 ++
		ENDIF
	ELSE
		;条件を満たしていなければ強制的にＯＦＦ
		CFLAG:(LOCAL:0):捕虜調教の助手 = 0
	ENDIF
NEXT

PRINTFORM 最大3人で説得できます
SIF LOCAL:1 >= 3 
	SETCOLOR カラー_オレンジ
PRINTFORM (現在{LOCAL:1}/ 3 人)
RESETCOLOR
PRINTFORM  
PRINTBUTTON "[自動選択]", 2
CALL COLORPRINT("(対象を選択してから押すとより正確)", カラー_注釈)
CALL COLUMN_RIGHT_PRINTL
CALL COLUMN_RIGHT_LINE
CALL COLUMN_RIGHT_PRINTL
;右カラムの上下２のキャラリスト下とページ移動を呼ぶ
CALL COLUMN_RIGHT_CHARALIST_BOTTOM(1)
RETURN 0

;-------------------------------------------------
;「説得させる」の右カラムボタンの入力処理補佐
;-------------------------------------------------
@SHOP_LIFE_EVENTBUY_SUB32(ARG:0)
;このメンバーで決定
SELECTCASE ARG:0 
	CASE 1
		IF MENUVAR:0 >= 0 && CFLAG:(MENUVAR:0):捕虜先 == CFLAG:MASTER:所属
			CALL SHOP_LIFE_SETTOKU(MENUVAR:0)
			IF !RESULT
				REDRAW 1
			ELSE
				SHOP_TIME ++
				LINES_SHOP = LINECOUNT
				BEGIN TURNEND
			ENDIF
		ENDIF
	CASE 2
		CALL SHOP_LIFE_SETTOKU_SELECT_BEST_MEMBER(MENUVAR:0)
ENDSELECT
RETURN 0

;-------------------------------------------------
;「説得させる」のリスト１入力処理
;-------------------------------------------------
@SHOP_LIFE_USERSHOP32(ARG:0)
MENUVAR:0 = ARG:0

;-------------------------------------------------
;「説得させる」のリスト２入力処理
;-------------------------------------------------
@SHOP_LIFE_USERSHOP_SUB32(ARG:0)
;選択可能な条件を満たしていないキャラなら戻る
RESULT = 0
TRYCALLFORM SHOP_LIFE_CHECKCHARA_SUB{FLAG:拠点フェイズ選択コマンド}(ARG:0)
IF RESULT != 1
	RETURN 0
ENDIF

LOCAL:5 = 0
FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:(LOCAL:0):捕虜調教の助手
		LOCAL:5 ++
	ENDIF
NEXT

IF CFLAG:(ARG:0):捕虜調教の助手 || LOCAL:5 < 3
	;調教参加フラグを反転
	CFLAG:(ARG:0):捕虜調教の助手 = !CFLAG:(ARG:0):捕虜調教の助手
ENDIF

;-------------------------------------------------
;「説得させる」の対象自動選択
;-------------------------------------------------
@SHOP_LIFE_SETTOKU_SELECT_BEST_MEMBER(対象, 最大数 = 3)
#DIM 対象
#DIM 候補, 3000
#DIM 候補値, 3000
#DIM 候補数
#DIM 説得者数
#DIM 最大数
VARSET 候補, -1
VARSET 候補値, __INT_MIN__
VARSET 候補数
VARSET 説得者数
CVARSET CFLAG, GETNUM(CFLAG, "捕虜調教の助手"), 0

FOR LOCAL:0, 0, CHARANUM
	;選択可能な条件を満たしているかどうかを判定
	TRYCALLFORM SHOP_LIFE_CHECKCHARA_SUB{FLAG:拠点フェイズ選択コマンド}(LOCAL:0)
	IF RESULT == 1
		候補:候補数 = LOCAL
		候補値:候補数 = CALC_SETTOKU_EFFECT(LOCAL, 対象) - (対象 > 0 ? CALC_SETTOKU_EFFECT_TARGET(対象, LOCAL) # 0)
		候補数 ++
	ENDIF
NEXT

SIF 候補数 == 0
	RETURN 0

WHILE 1
	LOCAL = FINDELEMENT(候補値, MAXARRAY(候補値), 0, 候補数)
	SIF 候補値:LOCAL == __INT_MIN__ || 候補:LOCAL == -1
		BREAK
	CFLAG:(候補:LOCAL):捕虜調教の助手 = 1

	候補値:LOCAL = __INT_MIN__
	候補:LOCAL = -1
	説得者数 ++
	SIF 説得者数 >= 最大数
		BREAK
WEND

RETURN 0

;-------------------------------------------------
;説得イベント(@EVENT_PRISONERから流用)
;-------------------------------------------------
@SHOP_LIFE_SETTOKU(対象)
#DIM 説得者, 3
#DIM 説得者数
#DIM 対象
VARSET 説得者, -1
VARSET 説得者数

SIF !(対象 >= 0 && CFLAG:(対象):捕虜先 == CFLAG:MASTER:所属)
	RETURN 0

FOR LOCAL:0, 0, CHARANUM
	IF CFLAG:LOCAL:捕虜調教の助手
		説得者:説得者数 = LOCAL
		説得者数 ++
	ENDIF
NEXT

IF 説得者:0 == -1
	PRINTFORMW 先に説得者を設定してください
	RETURN 0
ENDIF

FOR LOCAL, 0, VARSIZE("説得者")
	SIF 説得者:LOCAL == -1
		BREAK
	CALL DO_SETTOKU(対象, 説得者:LOCAL)
	SIF RESULT == 2
		BREAK
NEXT

RETURN 1


;戦略
;判定値を以下を基準に算出
;1.互いの自身の君主への印象
;2.互いの相手の君主への印象
;3.互いの政治力
;4.互いの知略
;判定値が大きいほど有利
@DO_SETTOKU(対象, 説得者)
#DIM 説得者
#DIM 対象
#DIM 説得者君主
#DIM 対象君主
#DIM 判定基礎値,2
#DIM 判定値
#DIM 効果量, 2
VARSET 判定基礎値
説得者君主 = GET_COUNTRY_BOSS(CFLAG:説得者:所属)
対象君主 = GET_COUNTRY_BOSS(CFLAG:対象:所属)

;説得側の判定値
;君主の場合は忠誠最大として扱う

判定基礎値:0 = CALC_SETTOKU_EFFECT_TARGET(説得者, 対象)
判定基礎値:1 = CALC_SETTOKU_EFFECT_TARGET(対象, 説得者)

PRINTFORML -<%ANAME(説得者)%>の<%ANAME(対象)%>への説得-
判定値 = (判定基礎値:0 - 判定基礎値:1) * 2

CALL FIND_GENERAL_SKILL(説得者, "弁舌")
SIF RESULT
	判定値 += RAND(5, 15)
CALL FIND_GENERAL_SKILL(説得者, "風説流布")
SIF RESULT
	判定値 += RAND(5, 15)

SELECTCASE 判定値
	CASE IS <= -100
		PRINTFORMW %ANAME(説得者)%は逆に感化された
	CASE IS <= -60
		PRINTFORMW %ANAME(説得者)%は丸め込まれてしまった
	CASE IS < 0
		PRINTFORMW %ANAME(説得者)%は説得に失敗した
	CASE IS <= 30
		PRINTFORMW %ANAME(説得者)%は説得に成功した
	CASE IS <= 60
		PRINTFORMW %ANAME(説得者)%は順調に説得できた
	CASE IS <= 100
		PRINTFORMW %ANAME(説得者)%はかなり順調に説得できた
	CASE IS > 100
		PRINTFORMW %ANAME(説得者)%は%ANAME(対象)%を感化させたようだ
ENDSELECT

CFLAG:対象:行動済み = 1
CFLAG:説得者:行動済み = 1


効果量:0 = 判定値
効果量:1 = 判定値

IF 判定値 > 0
	SIF REL_LIKE:対象:説得者君主 < REL_HATE:対象:説得者君主
		TIMES 効果量:1, 1.5
	CALL CHANGE_RELATION_O_TO_C(対象, CFLAG:説得者:所属, 効果量:0 * 2 / 3, -効果量:1 * 2/ 3)
	CALL CHANGE_RELATION_O_TO_O(対象, 説得者, 効果量:0 / 2, -効果量:1 / 2)
	CALL CHANGE_RELATION_O_TO_C(説得者, CFLAG:説得者:所属, 効果量:0 / 3, -効果量:1 / 3)
ELSEIF 判定値 < 0
	CALL CHANGE_RELATION_O_TO_C(対象, CFLAG:説得者:所属, 効果量:0 / 2, -効果量:1 / 2)
	CALL CHANGE_RELATION_O_TO_O(対象, 説得者, RAND(5, 10), -RAND(5, 10))
ENDIF

IF SETTOKU_REL_EFFECT(対象, 説得者君主) >= 95 && 判定値 > 100 && ABL_POWER(ABL:説得者:政治, 説得者) + ABL_POWER(ABL:説得者:知略, 説得者) > ABL_POWER(ABL:対象:政治, 対象) + ABL_POWER(ABL:対象:知略, 対象)
	CALL COLORPRINT(@"説得の末、%ANAME(対象)%は移籍の意思を固めた……", カラー_注意, "W")
	CALL CHANGE_COUNTRY(対象, CFLAG:説得者:所属, 1)
	MENUVAR:0 = 0
	RETURN 2
ENDIF

RETURN 1


;-------------------------------------------------
;(ARG:0)のキャラから(ARG:1)のキャラに対する
;-------------------------------------------------
@SETTOKU_REL_EFFECT(ARG:0, ARG:1)
#FUNCTION
RETURNF MAX((REL_LIKE:(ARG:0):(ARG:1) - REL_HATE:(ARG:0):(ARG:1)) * 100 / 1500, 0)

;-------------------------------------------------
;(ARG:0)がARG:1を説得する場合の説得能力を算出
;-------------------------------------------------
@CALC_SETTOKU_EFFECT(ARG:0, ARG:1)
#FUNCTION
RETURNF SETTOKU_BASE_EFFECT(ARG:0) + SETTOKU_REL_EFFECT(ARG:0, ARG:1) / 2

;-------------------------------------------------
;(ARG:0)がARG:1に説得される場合の説得能力を算出
;-------------------------------------------------
@CALC_SETTOKU_EFFECT_TARGET(ARG:0, ARG:1)
#FUNCTION
#DIM 君主
君主 = GET_COUNTRY_BOSS(CFLAG:(ARG:1):所属)
RETURNF SETTOKU_BASE_EFFECT(ARG:0) - (君主 >= 0 ? SETTOKU_REL_EFFECT(ARG:1, 君主) # 0)


;-------------------------------------------------
;(ARG:0)のキャラの基礎説得能力を算出
;-------------------------------------------------
@SETTOKU_BASE_EFFECT(ARG:0)
#FUNCTION
#DIM 君主
君主 = GET_COUNTRY_BOSS(CFLAG:(ARG:0):所属)
LOCAL = 0
IF ARG:0 != 君主 && 君主 >= 0
	LOCAL += SETTOKU_REL_EFFECT(ARG:0, 君主) / 2
ELSE
	LOCAL += 50
ENDIF
RETURNF LOCAL + ABL_POWER(ABL:(ARG:0):政治, ARG:0) / 1000 + ABL_POWER(ABL:(ARG:0):知略, ARG:0) / 1000
